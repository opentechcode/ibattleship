//
//  iBattleShipsAppDelegate.m
//  iBattleShips
//
//  Created by Sajjad Raza on 10/6/10.
//  Copyright Vizio-Mobile Inc. 2010. All rights reserved.
//

#import "iBattleShipsAppDelegate.h"
#import "cocos2d.h"
#import "HelloWorldScene.h"

@implementation iBattleShipsAppDelegate

@synthesize window,viewController;

- (void) applicationDidFinishLaunching:(UIApplication*)application
{
	
	NSLog(@"The tangent Inverse of the 45 %f",atan(1));
	// CC_DIRECTOR_INIT()
	//
	// 1. Initializes an EAGLView with 0-bit depth format, and RGB565 render buffer
	// 2. EAGLView multiple touches: disabled
	// 3. creates a UIWindow, and assign it to the "window" var (it must already be declared)
	// 4. Parents EAGLView to the newly created window
	// 5. Creates Display Link Director
	// 5a. If it fails, it will use an NSTimer director
	// 6. It will try to run at 60 FPS
	// 7. Display FPS: NO
	// 8. Device orientation: Portrait
	// 9. Connects the director to the EAGLView
	//
	
	///////////////////New Code//////////////
	window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
	
	CCDirector *director = [CCDirector sharedDirector];
	
	
	//
	// Init the UI View Controller
	// 
	RootViewController	*myrootViewController = [[RootViewController alloc] initWithNibName:nil bundle:nil];
	self.viewController=myrootViewController;
	viewController.wantsFullScreenLayout = YES;
	
	EAGLView *glView = [EAGLView viewWithFrame:[window bounds]
								   pixelFormat:kEAGLColorFormatRGBA8
								   depthFormat:GL_DEPTH_COMPONENT24_OES
							preserveBackbuffer:NO];
	
	//
	// attach the openglView to the director
	//
	[director setOpenGLView:glView];
	
	
	//
	// VERY IMPORTANT:
	// If the rotation is going to be controlled by a UIViewController
	// then the device orientation should be "Portrait". Default orientation is Portrait
	//
	[director setDeviceOrientation:kCCDeviceOrientationPortrait];
	
	//		
	// make the OpenGLView a child of the view controller
	//
	[viewController setView:glView];
	
	//
	// make the View Controller a child of the main window
	//
	
	
	viewController.navigationBar.hidden=YES;
	
	[window addSubview: viewController.view];
	
	[window makeKeyAndVisible];
	
	// Run the intro Scene
	[[GameManager sharedGameManager] startGame];
	//[[CCDirector sharedDirector] runWithScene: [HelloWorld scene]];
	
	//////////////////////////////////////////
	/*
	CC_DIRECTOR_INIT();
	
	// Obtain the shared director in order to...
	CCDirector *director = [CCDirector sharedDirector];
	
	// Sets landscape mode
	[director setDeviceOrientation:kCCDeviceOrientationLandscapeLeft];
	
	// Turn on display FPS
	//[director setDisplayFPS:YES];
	
	// Turn on multiple touches
	EAGLView *view = [director openGLView];
	
	[view setMultipleTouchEnabled:YES];
	
	// Default texture format for PNG/BMP/TIFF/JPEG/GIF images
	// It can be RGBA8888, RGBA4444, RGB5_A1, RGB565
	// You can change anytime.
	[CCTexture2D setDefaultAlphaPixelFormat:kTexture2DPixelFormat_RGBA8888];	
	
	[[GameManager sharedGameManager] startGame];	
	//[[CCDirector sharedDirector] runWithScene: [HelloWorld scene]];}
	*/
}

+ (NSString *) pathForApplicationFile: (NSString *) name{
	
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES); 
	NSString *documentsDirectory = [paths objectAtIndex:0]; 
	if (!documentsDirectory) { 
		//NSLog(@"Documents directory not found!"); 
	} 
	NSString *appFile = [documentsDirectory stringByAppendingPathComponent:name];
	
	return appFile; //return the path string
}


- (void)applicationWillResignActive:(UIApplication *)application {
	[[CCDirector sharedDirector] pause];
}

- (void)applicationDidBecomeActive:(UIApplication *)application {
	[[CCDirector sharedDirector] resume];
}

- (void)applicationDidReceiveMemoryWarning:(UIApplication *)application {
	[[CCDirector sharedDirector] purgeCachedData];
}

-(void) applicationDidEnterBackground:(UIApplication*)application {
	if ([GameManager sharedGameManager].gameProcessor.isGamePaused) 
	{
		[GameManager sharedGameManager].gameProcessor.didAppEntertoBackground = YES;

	}
	[[CCDirector sharedDirector] stopAnimation];
}

-(void) applicationWillEnterForeground:(UIApplication*)application 
{
	
	if ([GameManager sharedGameManager].gameProcessor.isGamePaused) 
	{
		[[CCDirector sharedDirector] pause];
	}
	else {
		[[CCDirector sharedDirector] startAnimation];

	}

	
}

- (void)applicationWillTerminate:(UIApplication *)application {
	[[GameManager sharedGameManager].gameProcessor.multiPlayerGameManager leaveMatch];
	[[CCDirector sharedDirector] end];
}

- (void)applicationSignificantTimeChange:(UIApplication *)application {
	[[CCDirector sharedDirector] setNextDeltaTimeZero:YES];
}

- (void)dealloc {
	[[CCDirector sharedDirector] release];
	[window release];
	[super dealloc];
}

@end
